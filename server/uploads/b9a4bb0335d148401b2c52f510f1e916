openapi: 3.0.3
info:
  title: Gestion RH API
  description: API pour la gestion des ressources humaines et des employés.
  version: 1.0.0
servers:
  - url: https://api.gestionrh.com/v1
    description: Serveur de production
  - url: https://staging.gestionrh.com/v1
    description: Serveur de test

tags:
  - name: Authentification
    description: Gestion de l'authentification.
  - name: RH
    description: Gestion des employés et des plannings par l'équipe RH.
  - name: Employé
    description: Fonctionnalités accessibles aux employés.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        lastName: 
          type: string
          example : Paul
        firstName:
          type: string
          example: Jake
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
        job:
          type: string
          example: Développeur
      required:
          - lastName
          - firstName
          - email
          - job
          - password


    PlanningItem:
      type: object
      properties:
        date:
          type: string
          format: date
          example: "2024-11-20"
        horaires:
          type: object
          properties:
            debut:
              type: string
              format: time
              example: "08:00"
            fin:
              type: string
              format: time
              example: "17:00"

    Planning:
      type: array
      items:
        $ref: "#/components/schemas/PlanningItem"

security:
  - bearerAuth: []

paths:
  /auth/login:
    post:
      tags:
        - Authentification
      summary: Connexion
      description: Permet de se connecter et d'obtenir un jeton JWT.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                motDePasse:
                  type: string
                  format: password
                  example: motdepasse123
              required:
                - email
                - motDePasse
      responses:
        200:
          description: Authentification réussie.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Jeton JWT à utiliser pour les appels sécurisés.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        401:
          description: Identifiants invalides.

  /rh/employes:
    post:
      tags:
        - RH
      summary: Créer un compte employé
      description: Permet à la RH de créer un nouveau compte pour un employé.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"

          
      responses:
        201:
          description: Employé créé avec succès.
        400:
          description: Données invalides.
  
  /rh/employes/{id}/planning:
    put:
      tags:
        - RH
      summary: Mettre à jour le planning d'un employé
      description: Permet à la RH de modifier le planning d'un employé.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Planning"
      responses:
        200:
          description: Planning mis à jour.
        404:
          description: Employé non trouvé.

  /employes/planning:
    get:
      tags:
        - Employé
      summary: Consulter son planning
      description: Permet à un employé de consulter son planning personnel.
      responses:
        200:
          description: Planning de l'employé.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Planning"

  /employes/horaires:
    post:
      tags:
        - Employé
      summary: Déclarer ses horaires d'arrivée et de départ
      description: Permet à un employé de déclarer ses horaires.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  example: "2024-11-20"
                arrivee:
                  type: string
                  format: time
                  example: "08:05"
                depart:
                  type: string
                  format: time
                  example: "16:55"
              required:
                - date
                - arrivee
                - depart
      responses:
        200:
          description: Horaires enregistrés avec succès.
        400:
          description: Données invalides.