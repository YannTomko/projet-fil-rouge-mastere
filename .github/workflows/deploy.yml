name: CI & Deploy

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & Lint backend
        run: |
          cd server
          npm install
          npm run lint
          npm test

      - name: Install & Lint frontend
        run: |
          cd client
          npm install
          npm run lint

  deploy:
    needs: test
    runs-on: ubuntu-latest
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no yannt@90.76.255.189 << EOF
            cd /var/www/projet-fil-rouge-mastere

            export JWT_SECRET=$JWT_SECRET
            export DATABASE_URL=$DATABASE_URL

            # Backend
            cd server
            git pull origin main
            npm install
            npm run lint
            npx prisma migrate deploy
            npx tsc
            pm2 restart airlocker-api --update-env \
              || pm2 start dist/server.js --name airlocker-api --env production

            # Frontend
            cd ../client
            git pull origin main
            npm install
            npm run lint
            npm run build
          EOF
